name: 'Setup Development Environment'
description: 'Set up Python, Node.js, and dependencies for CI/CD workflows'
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
  install-backend-deps:
    description: 'Install backend dependencies'
    required: false
    default: 'true'
  install-frontend-deps:
    description: 'Install frontend dependencies'
    required: false
    default: 'true'
  setup-database:
    description: 'Set up test database'
    required: false
    default: 'false'

outputs:
  python-version:
    description: 'Python version used'
    value: ${{ steps.setup-python.outputs.python-version }}
  node-version:
    description: 'Node.js version used'
    value: ${{ steps.setup-node.outputs.node-version }}

runs:
  using: 'composite'
  steps:
    - name: '🔧 Set up Python ${{ inputs.python-version }}'
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: '📦 Cache Python dependencies'
      if: inputs.install-backend-deps == 'true'
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: '📥 Install Python dependencies'
      if: inputs.install-backend-deps == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: '🔧 Set up Node.js ${{ inputs.node-version }}'
      id: setup-node
      if: inputs.install-frontend-deps == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'

    - name: '📥 Install frontend dependencies'
      if: inputs.install-frontend-deps == 'true'
      shell: bash
      run: |
        cd app/frontend/web && npm ci
        cd ../panel && npm ci

    - name: '🗄️ Set up test database'
      if: inputs.setup-database == 'true'
      shell: bash
      run: |
        python scripts/create_stock_pricing_tables.py
        python scripts/create_admin_user.py

    - name: '✅ Environment setup complete'
      shell: bash
      run: |
        echo "🐍 Python: ${{ steps.setup-python.outputs.python-version }}"
        echo "📦 Node.js: ${{ steps.setup-node.outputs.node-version }}"
        echo "🔧 Backend deps: ${{ inputs.install-backend-deps }}"
        echo "🎨 Frontend deps: ${{ inputs.install-frontend-deps }}"
        echo "🗄️ Database: ${{ inputs.setup-database }}"

"""add_version_tracking_to_models

Revision ID: 2f34dc5a1e0e
Revises: 4230884aa0a8
Create Date: 2025-09-29 14:01:05.471563

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '2f34dc5a1e0e'
down_revision = '4230884aa0a8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create tables only if they don't exist (idempotent migration)
    from sqlalchemy import inspect
    inspector = inspect(op.get_bind())
    existing_tables = inspector.get_table_names()
    
    if 'part_versions' not in existing_tables:
        op.create_table('part_versions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('part_id', sa.Integer(), nullable=False),
        sa.Column('version', sa.Integer(), nullable=False),
        sa.Column('changes', sa.JSON(), nullable=False),
        sa.Column('changed_by', sa.String(length=100), nullable=True),
        sa.Column('change_reason', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['part_id'], ['parts.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_part_versions_id'), 'part_versions', ['id'], unique=False)
    
    if 'stock_versions' not in existing_tables:
        op.create_table('stock_versions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('stock_id', sa.Integer(), nullable=False),
        sa.Column('version', sa.Integer(), nullable=False),
        sa.Column('changes', sa.JSON(), nullable=False),
        sa.Column('changed_by', sa.String(length=100), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['stock_id'], ['stock_levels.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_stock_versions_id'), 'stock_versions', ['id'], unique=False)
    op.drop_index(op.f('ix_sms_templates_id'), table_name='sms_templates')
    op.drop_index(op.f('ix_sms_templates_name'), table_name='sms_templates')
    op.drop_index(op.f('ix_sms_templates_template_type'), table_name='sms_templates')
    op.drop_table('sms_templates')
    op.drop_index(op.f('idx_rate_limit_lookup'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_action'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_id'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_identifier'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_identifier_type'), table_name='rate_limits')
    op.drop_index(op.f('ix_rate_limits_window_start'), table_name='rate_limits')
    op.drop_table('rate_limits')
    op.drop_index(op.f('idx_telegram_linked'), table_name='telegram_users')
    op.drop_index(op.f('idx_telegram_username'), table_name='telegram_users')
    op.drop_index(op.f('ix_telegram_users_id'), table_name='telegram_users')
    op.drop_index(op.f('ix_telegram_users_telegram_id'), table_name='telegram_users')
    op.drop_index(op.f('ix_telegram_users_user_id'), table_name='telegram_users')
    op.drop_index(op.f('ix_telegram_users_username'), table_name='telegram_users')
    op.drop_table('telegram_users')
    op.drop_index(op.f('idx_deep_link_action'), table_name='telegram_deep_links')
    op.drop_index(op.f('idx_deep_link_expires'), table_name='telegram_deep_links')
    op.drop_index(op.f('idx_deep_link_used'), table_name='telegram_deep_links')
    op.drop_index(op.f('ix_telegram_deep_links_expires_at'), table_name='telegram_deep_links')
    op.drop_index(op.f('ix_telegram_deep_links_id'), table_name='telegram_deep_links')
    op.drop_index(op.f('ix_telegram_deep_links_link_id'), table_name='telegram_deep_links')
    op.drop_index(op.f('ix_telegram_deep_links_telegram_user_id'), table_name='telegram_deep_links')
    op.drop_table('telegram_deep_links')
    op.drop_index(op.f('ix_sms_logs_id'), table_name='sms_logs')
    op.drop_index(op.f('ix_sms_logs_recipient_phone'), table_name='sms_logs')
    op.drop_index(op.f('ix_sms_logs_status'), table_name='sms_logs')
    op.drop_table('sms_logs')
    op.drop_index(op.f('ix_sms_delivery_reports_external_id'), table_name='sms_delivery_reports')
    op.drop_index(op.f('ix_sms_delivery_reports_id'), table_name='sms_delivery_reports')
    op.drop_index(op.f('ix_sms_delivery_reports_status'), table_name='sms_delivery_reports')
    op.drop_table('sms_delivery_reports')
    op.drop_index(op.f('ix_sms_campaigns_id'), table_name='sms_campaigns')
    op.drop_table('sms_campaigns')
    op.drop_index(op.f('ix_phone_verifications_id'), table_name='phone_verifications')
    op.drop_index(op.f('ix_phone_verifications_phone_number'), table_name='phone_verifications')
    op.drop_index(op.f('ix_phone_verifications_user_id'), table_name='phone_verifications')
    op.drop_table('phone_verifications')
    op.drop_index(op.f('idx_otp_phone_expires'), table_name='otp_codes')
    op.drop_index(op.f('idx_otp_user_type'), table_name='otp_codes')
    op.drop_index(op.f('ix_otp_codes_expires_at'), table_name='otp_codes')
    op.drop_index(op.f('ix_otp_codes_id'), table_name='otp_codes')
    op.drop_index(op.f('ix_otp_codes_phone_number'), table_name='otp_codes')
    op.drop_index(op.f('ix_otp_codes_user_id'), table_name='otp_codes')
    op.drop_table('otp_codes')
    op.drop_index(op.f('idx_link_token_expires'), table_name='telegram_link_tokens')
    op.drop_index(op.f('idx_link_token_type'), table_name='telegram_link_tokens')
    op.drop_index(op.f('idx_link_token_used'), table_name='telegram_link_tokens')
    op.drop_index(op.f('ix_telegram_link_tokens_expires_at'), table_name='telegram_link_tokens')
    op.drop_index(op.f('ix_telegram_link_tokens_id'), table_name='telegram_link_tokens')
    op.drop_index(op.f('ix_telegram_link_tokens_telegram_user_id'), table_name='telegram_link_tokens')
    op.drop_index(op.f('ix_telegram_link_tokens_token'), table_name='telegram_link_tokens')
    op.drop_index(op.f('ix_telegram_link_tokens_token_hash'), table_name='telegram_link_tokens')
    op.drop_index(op.f('ix_telegram_link_tokens_user_id'), table_name='telegram_link_tokens')
    op.drop_table('telegram_link_tokens')
    op.drop_index(op.f('ix_stock_alerts_id'), table_name='stock_alerts')
    op.drop_index(op.f('ix_stock_alerts_phone_number'), table_name='stock_alerts')
    op.drop_table('stock_alerts')
    op.drop_index(op.f('idx_bot_session_expires'), table_name='telegram_bot_sessions')
    op.drop_index(op.f('idx_bot_session_state'), table_name='telegram_bot_sessions')
    op.drop_index(op.f('idx_bot_session_user'), table_name='telegram_bot_sessions')
    op.drop_index(op.f('ix_telegram_bot_sessions_expires_at'), table_name='telegram_bot_sessions')
    op.drop_index(op.f('ix_telegram_bot_sessions_id'), table_name='telegram_bot_sessions')
    op.drop_index(op.f('ix_telegram_bot_sessions_session_id'), table_name='telegram_bot_sessions')
    op.drop_index(op.f('ix_telegram_bot_sessions_telegram_user_id'), table_name='telegram_bot_sessions')
    op.drop_table('telegram_bot_sessions')
    # Add columns only if they don't exist (idempotent migration)
    parts_columns = [col['name'] for col in inspector.get_columns('parts')]
    if 'current_version' not in parts_columns:
        op.add_column('parts', sa.Column('current_version', sa.Integer(), nullable=False, server_default='1'))
    if 'last_updated_by' not in parts_columns:
        op.add_column('parts', sa.Column('last_updated_by', sa.String(length=100), nullable=True))
    
    stock_columns = [col['name'] for col in inspector.get_columns('stock_levels')]
    if 'version' not in stock_columns:
        op.add_column('stock_levels', sa.Column('version', sa.Integer(), nullable=False, server_default='1'))
    if 'updated_by' not in stock_columns:
        op.add_column('stock_levels', sa.Column('updated_by', sa.String(length=100), nullable=True))
    if 'lock_timestamp' not in stock_columns:
        op.add_column('stock_levels', sa.Column('lock_timestamp', sa.DateTime(), nullable=True))
    # Note: Skipping alter_column operations for SQLite compatibility
    # These columns already exist with proper defaults from previous migrations
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Note: Skipping alter_column operations for SQLite compatibility
    # These columns already exist with proper defaults from previous migrations
    op.drop_column('stock_levels', 'lock_timestamp')
    op.drop_column('stock_levels', 'updated_by')
    op.drop_column('stock_levels', 'version')
    op.drop_column('parts', 'last_updated_by')
    op.drop_column('parts', 'current_version')
    op.create_table('telegram_bot_sessions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('telegram_user_id', sa.INTEGER(), nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('state', sa.VARCHAR(length=50), nullable=False),
    sa.Column('context', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['telegram_user_id'], ['telegram_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_user_id', 'session_id', name=op.f('uq_telegram_user_session'))
    )
    op.create_index(op.f('ix_telegram_bot_sessions_telegram_user_id'), 'telegram_bot_sessions', ['telegram_user_id'], unique=False)
    op.create_index(op.f('ix_telegram_bot_sessions_session_id'), 'telegram_bot_sessions', ['session_id'], unique=False)
    op.create_index(op.f('ix_telegram_bot_sessions_id'), 'telegram_bot_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_bot_sessions_expires_at'), 'telegram_bot_sessions', ['expires_at'], unique=False)
    op.create_index(op.f('idx_bot_session_user'), 'telegram_bot_sessions', ['telegram_user_id'], unique=False)
    op.create_index(op.f('idx_bot_session_state'), 'telegram_bot_sessions', ['state'], unique=False)
    op.create_index(op.f('idx_bot_session_expires'), 'telegram_bot_sessions', ['expires_at'], unique=False)
    op.create_table('stock_alerts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('part_id', sa.INTEGER(), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('is_notified', sa.BOOLEAN(), nullable=False),
    sa.Column('notified_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['parts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_alerts_phone_number'), 'stock_alerts', ['phone_number'], unique=False)
    op.create_index(op.f('ix_stock_alerts_id'), 'stock_alerts', ['id'], unique=False)
    op.create_table('telegram_link_tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), nullable=False),
    sa.Column('token_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('telegram_user_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('is_used', sa.BOOLEAN(), nullable=False),
    sa.Column('used_at', sa.DATETIME(), nullable=True),
    sa.Column('nonce', sa.VARCHAR(length=64), nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('token_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['telegram_user_id'], ['telegram_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telegram_link_tokens_user_id'), 'telegram_link_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_telegram_link_tokens_token_hash'), 'telegram_link_tokens', ['token_hash'], unique=False)
    op.create_index(op.f('ix_telegram_link_tokens_token'), 'telegram_link_tokens', ['token'], unique=1)
    op.create_index(op.f('ix_telegram_link_tokens_telegram_user_id'), 'telegram_link_tokens', ['telegram_user_id'], unique=False)
    op.create_index(op.f('ix_telegram_link_tokens_id'), 'telegram_link_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_link_tokens_expires_at'), 'telegram_link_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('idx_link_token_used'), 'telegram_link_tokens', ['is_used'], unique=False)
    op.create_index(op.f('idx_link_token_type'), 'telegram_link_tokens', ['token_type'], unique=False)
    op.create_index(op.f('idx_link_token_expires'), 'telegram_link_tokens', ['expires_at'], unique=False)
    op.create_table('otp_codes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), nullable=False),
    sa.Column('code_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('code_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('attempts', sa.INTEGER(), nullable=False),
    sa.Column('max_attempts', sa.INTEGER(), nullable=False),
    sa.Column('is_used', sa.BOOLEAN(), nullable=False),
    sa.Column('used_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('sms_sent', sa.BOOLEAN(), nullable=False),
    sa.Column('sms_sent_at', sa.DATETIME(), nullable=True),
    sa.Column('sms_provider', sa.VARCHAR(length=50), nullable=True),
    sa.Column('sms_provider_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('sms_error', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_otp_codes_user_id'), 'otp_codes', ['user_id'], unique=False)
    op.create_index(op.f('ix_otp_codes_phone_number'), 'otp_codes', ['phone_number'], unique=False)
    op.create_index(op.f('ix_otp_codes_id'), 'otp_codes', ['id'], unique=False)
    op.create_index(op.f('ix_otp_codes_expires_at'), 'otp_codes', ['expires_at'], unique=False)
    op.create_index(op.f('idx_otp_user_type'), 'otp_codes', ['user_id', 'code_type'], unique=False)
    op.create_index(op.f('idx_otp_phone_expires'), 'otp_codes', ['phone_number', 'expires_at'], unique=False)
    op.create_table('phone_verifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), nullable=False),
    sa.Column('verification_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('verified_at', sa.DATETIME(), nullable=True),
    sa.Column('verification_method', sa.VARCHAR(length=20), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_phone_verifications_user_id'), 'phone_verifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_phone_verifications_phone_number'), 'phone_verifications', ['phone_number'], unique=False)
    op.create_index(op.f('ix_phone_verifications_id'), 'phone_verifications', ['id'], unique=False)
    op.create_table('sms_campaigns',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('template_id', sa.INTEGER(), nullable=False),
    sa.Column('target_audience', sa.VARCHAR(length=50), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('scheduled_at', sa.DATETIME(), nullable=True),
    sa.Column('started_at', sa.DATETIME(), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('total_recipients', sa.INTEGER(), nullable=False),
    sa.Column('sent_count', sa.INTEGER(), nullable=False),
    sa.Column('delivered_count', sa.INTEGER(), nullable=False),
    sa.Column('failed_count', sa.INTEGER(), nullable=False),
    sa.Column('total_cost', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['sms_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sms_campaigns_id'), 'sms_campaigns', ['id'], unique=False)
    op.create_table('sms_delivery_reports',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('sms_log_id', sa.INTEGER(), nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=100), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status_code', sa.VARCHAR(length=10), nullable=True),
    sa.Column('status_message', sa.TEXT(), nullable=True),
    sa.Column('delivery_time', sa.DATETIME(), nullable=True),
    sa.Column('cost', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['sms_log_id'], ['sms_logs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sms_delivery_reports_status'), 'sms_delivery_reports', ['status'], unique=False)
    op.create_index(op.f('ix_sms_delivery_reports_id'), 'sms_delivery_reports', ['id'], unique=False)
    op.create_index(op.f('ix_sms_delivery_reports_external_id'), 'sms_delivery_reports', ['external_id'], unique=False)
    op.create_table('sms_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('recipient_phone', sa.VARCHAR(length=20), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('template_id', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('sent_at', sa.DATETIME(), nullable=True),
    sa.Column('delivered_at', sa.DATETIME(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('cost', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('retry_count', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['sms_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sms_logs_status'), 'sms_logs', ['status'], unique=False)
    op.create_index(op.f('ix_sms_logs_recipient_phone'), 'sms_logs', ['recipient_phone'], unique=False)
    op.create_index(op.f('ix_sms_logs_id'), 'sms_logs', ['id'], unique=False)
    op.create_table('telegram_deep_links',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('link_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('telegram_user_id', sa.INTEGER(), nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), nullable=False),
    sa.Column('target_url', sa.TEXT(), nullable=False),
    sa.Column('parameters', sa.TEXT(), nullable=True),
    sa.Column('nonce', sa.VARCHAR(length=64), nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('is_used', sa.BOOLEAN(), nullable=False),
    sa.Column('used_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['telegram_user_id'], ['telegram_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telegram_deep_links_telegram_user_id'), 'telegram_deep_links', ['telegram_user_id'], unique=False)
    op.create_index(op.f('ix_telegram_deep_links_link_id'), 'telegram_deep_links', ['link_id'], unique=1)
    op.create_index(op.f('ix_telegram_deep_links_id'), 'telegram_deep_links', ['id'], unique=False)
    op.create_index(op.f('ix_telegram_deep_links_expires_at'), 'telegram_deep_links', ['expires_at'], unique=False)
    op.create_index(op.f('idx_deep_link_used'), 'telegram_deep_links', ['is_used'], unique=False)
    op.create_index(op.f('idx_deep_link_expires'), 'telegram_deep_links', ['expires_at'], unique=False)
    op.create_index(op.f('idx_deep_link_action'), 'telegram_deep_links', ['action'], unique=False)
    op.create_table('telegram_users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('telegram_id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('language_code', sa.VARCHAR(length=10), nullable=True),
    sa.Column('is_bot', sa.BOOLEAN(), nullable=False),
    sa.Column('is_premium', sa.BOOLEAN(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('is_linked', sa.BOOLEAN(), nullable=False),
    sa.Column('linked_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('last_activity', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telegram_users_username'), 'telegram_users', ['username'], unique=False)
    op.create_index(op.f('ix_telegram_users_user_id'), 'telegram_users', ['user_id'], unique=False)
    op.create_index(op.f('ix_telegram_users_telegram_id'), 'telegram_users', ['telegram_id'], unique=1)
    op.create_index(op.f('ix_telegram_users_id'), 'telegram_users', ['id'], unique=False)
    op.create_index(op.f('idx_telegram_username'), 'telegram_users', ['username'], unique=False)
    op.create_index(op.f('idx_telegram_linked'), 'telegram_users', ['is_linked'], unique=False)
    op.create_table('rate_limits',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('identifier', sa.VARCHAR(length=100), nullable=False),
    sa.Column('identifier_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), nullable=False),
    sa.Column('count', sa.INTEGER(), nullable=False),
    sa.Column('window_start', sa.DATETIME(), nullable=False),
    sa.Column('window_duration', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_limits_window_start'), 'rate_limits', ['window_start'], unique=False)
    op.create_index(op.f('ix_rate_limits_identifier_type'), 'rate_limits', ['identifier_type'], unique=False)
    op.create_index(op.f('ix_rate_limits_identifier'), 'rate_limits', ['identifier'], unique=False)
    op.create_index(op.f('ix_rate_limits_id'), 'rate_limits', ['id'], unique=False)
    op.create_index(op.f('ix_rate_limits_action'), 'rate_limits', ['action'], unique=False)
    op.create_index(op.f('idx_rate_limit_lookup'), 'rate_limits', ['identifier', 'identifier_type', 'action', 'window_start'], unique=False)
    op.create_table('sms_templates',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('template_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('content_en', sa.TEXT(), nullable=True),
    sa.Column('content_fa', sa.TEXT(), nullable=True),
    sa.Column('variables', sqlite.JSON(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sms_templates_template_type'), 'sms_templates', ['template_type'], unique=False)
    op.create_index(op.f('ix_sms_templates_name'), 'sms_templates', ['name'], unique=1)
    op.create_index(op.f('ix_sms_templates_id'), 'sms_templates', ['id'], unique=False)
    op.drop_index(op.f('ix_stock_versions_id'), table_name='stock_versions')
    op.drop_table('stock_versions')
    op.drop_index(op.f('ix_part_versions_id'), table_name='part_versions')
    op.drop_table('part_versions')
    # ### end Alembic commands ###
